#!/bin/bash
# written for Ubuntu 14.04 Desktop

# This script must be executed as root.
if [[ $EUID -ne 0 ]]; then
    echo -e "\e[31mYOU MUST BE ROOT TO RUN THIS SCRIPT! \e[0m \n"
    exit 1
    else echo -e "Root privileges verified; proceeding. \n"
fi

echo "NOTE: You must authenticate to Kerberos via kinit (USERNAME)/admin"
echo "on the server before proceeeding. Press CTRL-C to terminate this"
echo "script or ENTER to continue; failure to do so will result in the"
echo "inability to use this machine on the domain. If you have already"
echo "authenticated to the server, it is recommended to log back into"
echo "the server and type 'klist' to ensure your ticket is still valid"
echo "before proceeding."
read configureThisDomainClient

# Variable for blacklisting rpcsec_gss_krb5 to speed up nfs mounts
# default /etc/modprobe.d/blacklist.conf
rpcblk="/etc/modprobe.d/blacklist.conf"

# Variable for adding host to Kerberos
hname=`hostname -f`

# Variable for modifying LightDM login variables
# default: /usr/share/lightdm/lightdm.conf.d/50-ubuntu.conf
ldmmod="/usr/share/lightdm/lightdm.conf.d/50-ubuntu.conf" 

# Variable for controlling krb5.conf
# default location /etc/krb5.conf
k5conf="/etc/krb5.conf"

# Variable for controlling sssd.conf
# This file is not generated by default; a generic sample file
# can be found in /usr/share/doc/sssd-common/examples/sssd-example.conf
sdcnf="/etc/sssd/sssd.conf"

# variable for controlling nfs-common
# default: /etc/default/nfs-common
nfscmn="/etc/default/nfs-common"

# variables for controlling autofs
# default: /etc/auto.master
atmstr="/etc/auto.master"
athome="/etc/auto.home"

# Variable for modifying polkit
# default: /etc/polkit-1/localauthority.conf.d/51-ubuntu-admin.conf
polmod="/etc/polkit-1/localauthority.conf.d/51-ubuntu-admin.conf"

# Variable for controlling nsswitch.conf
nswcnf="/etc/nsswitch.conf"

# control backup files
tmstamp=`date --rfc-3339=ns | sed 's/ /./g'`

krbadmin="administrator" # default Kerberos administrator
admin="administrator" # default administrative user
srvrName="main1" # server name
dc1="test" # default: example
dc2="local" # default: com

#============================================#
#     Derived variables in this section      #
#============================================#
newDom="$dc1.$dc2" # concatenated domain name
newDomUp=`echo $newDom | tr '[:lower:]' '[:upper:]'` # capitalized newDom

apt-get update
apt-get install aptitude sssd libsss-sudo autofs krb5-user nfs-common -y
aptitude safe-upgrade -y
apt-get autoremove -y
apt-get autoclean -y

# Rewrite nsswitch file to address potential name resolution issues.
mv $nswcnf $nswcnf.back.$tmstamp
touch $nswcnf
echo "" >> $nswcnf
echo "passwd:        compat sss" >> $nswcnf
echo "group:        compat sss" >> $nswcnf
echo "shadow:        compat" >> $nswcnf
echo "" >> $nswcnf
echo "hosts:        files mdns4_minimal dns" >> $nswcnf
echo "network:    files" >> $nswcnf
echo "" >> $nswcnf
echo "protocols:    db files" >> $nswcnf
echo "services:    db files" >> $nswcnf
echo "ethers:        db files" >> $nswcnf
echo "rpc:        db files" >> $nswcnf
echo "" >> $nswcnf
echo "netgroup:    nis sss" >> $nswcnf
echo "sudoers:    files sss" >> $nswcnf

# Restart dhcp to pick up changes in nsswitch.conf
sudo service network-manager restart

# Modify LightDM login settings
# This will allow domain login, disallow the guest account,
# and hide the available users from the login screen.
echo "allow-guest=false" >> $ldmmod
echo "greeter-hide-users=true" >> $ldmmod
echo "greeter-show-manual=true" >> $ldmmod

# Create the sssd.conf file
touch $sdcnf
echo "[sssd]" >> $sdcnf
echo "config_file_version = 2" >> $sdcnf
echo "reconnection_retries = 3" >> $sdcnf
echo "sbus_timeout = 30" >> $sdcnf
echo "services = nss, pam, sudo" >> $sdcnf
echo "domains = $newDom" >> $sdcnf
echo "" >> $sdcnf
echo "[nss]" >> $sdcnf
echo "filter_groups = root" >> $sdcnf
echo "filter_users = root" >> $sdcnf
echo "reconnection_retries = 3" >> $sdcnf
echo "" >> $sdcnf
echo "[pam]" >> $sdcnf
echo "reconnection_retries = 3" >> $sdcnf
echo "" >> $sdcnf
echo "[domain/$newDom]" >> $sdcnf
echo "; Using enumerate = true leads to high load and slow response" >> $sdcnf
echo "enumerate = false" >> $3sdcnf
echo "cache_credentials = false" >> $sdcnf
echo "" >> $sdcnf
echo "id_provider = ldap" >> $sdcnf
echo "auth_provider = krb5" >> $sdcnf
echo "chpass_provider = krb5" >> $sdcnf
echo "" >> $sdcnf
echo "ldap_uri = ldap://ldap.$newDom" >> $sdcnf
echo "ldap_search = dc=$dc1,dc=$dc2" >> $sdcnf
echo "ldap_sudo_search_base = ou=sudoers,dc=$dc1,dc=$dc2" >> $sdcnf
echo "ldap_tls_reqcert = never" >> $sdcnf
echo "" >> $sdcnf
echo "krb5_kdcip = kerberos.$newDom" >> $sdcnf
echo "krb5_realm = $newDomUp" >> $sdcnf
echo "krb5_changepw_principle = kadmin/changepw" >> $sdcnf
echo "krb5_auth_timeout = 15" >> $sdcnf
echo "krb5_renewable_lifetime = 5d" >> $sdcnf

# ensure proper permissions and start the sssd daemon
chmod 600 $sdcnf
service sssd restart

# This step may not be necessary since the krb5.conf file will
# be rewritten, but is included in an effort to ensure completion.
# This step with will ask for the realm (EXAMPLE.COM). If prompted
# to add the realm information to /etc/krb5.conf, select YES. If
# prompted to enter the kerberos server and admin server (should be
# the same [12/8/14]), enter (SERVER.EXAMPLE.COM)
dpkg-reconfigure krb5-config

# Modify krb5.conf
mv $k5conf $k5conf.back.$tmstamp
touch $k5conf
echo "[libdefaults]" >> $k5conf
echo "    default_realm = $newDomUp" >> $k5conf
echo "    krb4_config = /etc/krb.conf" >> $k5conf
echo "    krb4_realms = /etc/krb.realms" >> $k5conf
echo "    kdc_timesync = 1" >> $k5conf
echo "    ccache_type = 4" >> $k5conf
echo "    forwardable = true" >> $k5conf
echo "    proxiable = true" >> $k5conf
echo "    allow_weak_crypto = true" >> $k5conf
echo "    v4_instance_resolve = false" >> $k5conf
echo "    vr_name_convert = {" >> $k5conf
echo "        host = {" >> $k5conf
echo "            rcmd = host" >> $k5conf
echo "            ftp = ftp" >> $k5conf
echo "        }" >> $k5conf
echo "        plain = {" >> $k5conf
echo "            something = something-else" >> $k5conf
echo "        }" >> $k5conf
echo "    }" >> $k5conf
echo "    fcc-mit-ticketflags = true" >> $k5conf
echo "" >> $k5conf
echo "[realms]" >> $k5conf
echo "    $newDomUp = {" >> $k5conf
echo "        kdc = $srvrName.$newDom" >> $k5conf
echo "        admin_server = $srvrName.$newDom" >> $k5conf
echo "        master_kdc = $srvrName.$newDom" >> $k5conf
echo "        default_domain = $newDom" >> $k5conf
echo "    }" >> $k5conf
echo "" >> $k5conf
echo "[domain_realm]" >> $k5conf
echo "" >> $k5conf
echo "[login]" >> $k5conf
echo "    krb4_convert = true" >> $k5conf
echo "    krb4_get_tickets = false" >> $k5conf

# Next, a principle entry will be created for the new client machine
kadmin -p $krbadmin/admin -q "addprinc -randkey nfs/$hname"
kadmin -p $krbadmin/admin -q "ktadd nfs/$hname"

# Modify nfs-common
mv $nfscmn $nfscmn.back.$tmstamp
touch $nfscmn
echo "NEED_STATD=" >> $nfscmn
echo "STATDOPTS=" >> $nfscmn
echo "NEED_GSSD=yes" >> $nfscmn

# Modify and configure autofs
mv $atmstr $atmstr.back.$tmstamp
echo "/home    $athome" >> $atmstr
touch $athome
echo "*    -fstype=nfs4,rw,hard,intr,sec=krb5    $srvrName.$newDom:/home/&" >> $athome
service autofs restart

# Allow the use of graphical programs as administrator
mv $polmod $polmod.back.$tmstamp
touch $polmod
echo "[Configuration]" >> $polmod
echo "AdminIdentities=unix-group:admin;unix-group:10000" >> $polmod

# Speed up nfs mounting
#echo "" >> $rpcblk
#echo "# blacklist rpcsec_gss_krb5 to speed up NFS mounting" >> $rpcblk
#echo "blacklist rpcsec_gss_krb5" >> $rpcblk

# Reboot the client to complete domain configuration
reboot
